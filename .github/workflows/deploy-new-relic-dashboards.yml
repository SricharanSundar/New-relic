name: Deploy New Relic Dashboards via Manifest

on:
  # This is now the ONLY trigger, enabling manual runs from the Actions tab
  workflow_dispatch:

jobs:
  deploy-dashboards:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy All Dashboards Based on Manifest
        env:
          ALL_SECRETS: ${{ toJSON(secrets) }}
        run: |
          echo "Manual trigger detected. All files in the manifest will be deployed."
          echo "------------------------------------------------------"

          # This loop now runs for every dashboard in the manifest file
          jq -r -c '.[]' Dashboards/manifest.json | while read -r entry; do
            FILE_PATH=$(echo "$entry" | jq -r '.filePath')
            
            ACCOUNT_ID=$(echo "$entry" | jq -r '.accountId')
            API_KEY_SECRET_NAME=$(echo "$entry" | jq -r '.apiKeySecretName')
            API_KEY=$(echo "$ALL_SECRETS" | jq -r ".\"$API_KEY_SECRET_NAME\"")

            if [ -z "$API_KEY" ] || [ "$API_KEY" == "null" ]; then
                echo "::error::Secret '$API_KEY_SECRET_NAME' could not be found."
                exit 1
            fi

            echo "Deploying changes for: $FILE_PATH"
            echo "Target Account ID: $ACCOUNT_ID"

            # This performs all four required transformations for API compatibility.
            TRANSFORMED_DASHBOARD=$(jq '(.guid = .pages[0].guid) | del(.variables) | del(.pages[].widgets[].id) | del(.pages[].widgets[].linkedEntityGuids)' "$FILE_PATH")

            # Build the GraphQL payload with the fully corrected dashboard content
            GRAPHQL_MUTATION=$(jq -n \
              --arg acctId "$ACCOUNT_ID" \
              --arg dashboard "$TRANSFORMED_DASHBOARD" \
              '{query: "mutation($dashboardJson: NerdletDashboardInput!, $accountId: Int!) { dashboardCreate(accountId: $accountId, dashboard: $dashboardJson) { entityResult { guid } } }", variables: {accountId: $acctId | tonumber, dashboardJson: $dashboard}}')
            
            RESPONSE=$(curl -s -X POST https://api.newrelic.com/graphql \
              -H "Content-Type: application/json" \
              -H "API-Key: ${API_KEY}" \
              -d "${GRAPHQL_MUTATION}")
            
            if echo "$RESPONSE" | grep -q "errors"; then
              echo "::error::API call failed for $FILE_PATH. Response from New Relic:"
              echo "$RESPONSE"
              exit 1
            else
              echo "Successfully deployed $FILE_PATH to Account ID $ACCOUNT_ID."
              echo "Response from New Relic: $RESPONSE"
            fi
            echo "------------------------------------------------------"
          done
