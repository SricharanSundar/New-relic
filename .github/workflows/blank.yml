name: Deploy New Relic Dashboards via Manifest

on:
  push:
    branches:
      - main
    paths:
      - 'dashboards/**'

jobs:
  deploy-dashboards:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy Modified Dashboards Based on Manifest
        env:
          ${{ toJSON(secrets) }}
        run: |
          MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD | grep 'dashboards/.*\.json$')
          if [ -z "$MODIFIED_FILES" ]; then
            echo "No dashboard JSON files were modified. Exiting."
            exit 0
          fi
          
          echo "Processing modified files: $MODIFIED_FILES"
          echo "------------------------------------------------------"

          jq -r -c '.[]' dashboards/manifest.json | while read -r entry; do
            FILE_PATH=$(echo "$entry" | jq -r '.filePath')
            if ! echo "$MODIFIED_FILES" | grep -q "^$FILE_PATH$"; then
              continue
            fi
            
            ACCOUNT_ID=$(echo "$entry" | jq -r '.accountId')
            API_KEY_SECRET_NAME=$(echo "$entry" | jq -r '.apiKeySecretName')
            
            echo "Deploying changes for: $FILE_PATH"
            echo "Target Account ID: $ACCOUNT_ID"

            DASHBOARD_JSON=$(cat "$FILE_PATH" | jq -c . | sed 's/"/\\"/g')
            GRAPHQL_MUTATION="{\"query\": \"mutation { dashboardCreateOrUpdate(accountId: ${ACCOUNT_ID}, dashboard: \\\"${DASHBOARD_JSON}\\\") { guid } }\"}"

            API_KEY="${!API_KEY_SECRET_NAME}"
            if [ -z "$API_KEY" ]; then
                echo "::error::Secret $API_KEY_SECRET_NAME is not set or empty."
                exit 1
            fi

            curl -s -X POST https://api.newrelic.com/graphql \
              -H "Content-Type: application/json" \
              -H "API-Key: ${API_KEY}" \
              -d "${GRAPHQL_MUTATION}"
            
            echo -e "\nSuccessfully deployed $FILE_PATH to Account ID $ACCOUNT_ID."
            echo "------------------------------------------------------"
          done
